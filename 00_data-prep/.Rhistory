rm(list=ls())
library(eurostat)
library(dplyr)
library(tidyr)
library(reshape2)
library(readr)
gva_raw <- get_eurostat(tolower("NAMA_10R_2GVAGR"))
gdp_raw <- get_eurostat(tolower("NAMA_10R_2GDP"))
colnames(gdp_raw) <- c("freq","unit","geo","time","values")
colnames(gva_raw) <- c("freq","na_item","unit","geo","time","values")
gva_reg <- gva_raw %>%
subset(unit %in% "I15") %>%
subset(na_item %in% "B1GQ") %>% ## Gross domestic product at market prices [B1GQ]
select(geo,time,values)
gdp_reg <- gdp_raw %>%
subset(unit %in% "MIO_EUR") %>%
select(geo,time,values)
gva_cnraw <- get_eurostat(tolower("NAMQ_10_A10"))
gva_cn <- gva_cnraw %>%
subset(unit %in% "CLV_I15") %>%
subset(nace_r2 %in% "TOTAL") %>%
subset(s_adj %in% "SCA") %>% rename("time" = "TIME_PERIOD") %>%
select(geo,time,values)
rm(list=ls())
library(eurostat)
library(dplyr)
library(tidyr)
library(reshape2)
library(readr)
gva_raw <- get_eurostat(tolower("NAMA_10R_2GVAGR"))
gdp_raw <- get_eurostat(tolower("NAMA_10R_2GDP"))
colnames(gdp_raw) <- c("freq","unit","geo","time","values")
colnames(gva_raw) <- c("freq","na_item","unit","geo","time","values")
gva_reg <- gva_raw %>%
subset(unit %in% "I15") %>%
subset(na_item %in% "B1GQ") %>% ## Gross domestic product at market prices [B1GQ]
select(geo,time,values)
gdp_reg <- gdp_raw %>%
subset(unit %in% "MIO_EUR") %>%
select(geo,time,values)
gva_cnraw <- get_eurostat(tolower("NAMQ_10_A10"))
gva_cn <- gva_cnraw %>%
subset(unit %in% "CLV_I15") %>%
subset(nace_r2 %in% "TOTAL") %>%
subset(s_adj %in% "SCA") %>% rename("time" = "TIME_PERIOD") %>%
select(geo,time,values)
# --------------------------------------------------------------------------------------------------------
# re-labeling
gva_cn <- gva_cn[nchar(gva_cn$geo)==2,]
gva_reg <- gva_reg[nchar(gva_reg$geo)==4,] # subset to nuts-2 regions only
gdp_reg <- gdp_reg[nchar(gdp_reg$geo)==4,] # subset to nuts-2 regions only
gva_reg$nuts <- gva_reg$geo
gva_reg$geo <- substr(gva_reg$nuts,1,2)
gdp_reg$nuts <- gdp_reg$geo
gdp_reg$geo <- substr(gdp_reg$nuts,1,2)
nuts2_data$geo <- substr(nuts2_data$NUTS2,1,2)
rm(list=ls())
library(eurostat)
library(dplyr)
library(tidyr)
library(reshape2)
library(readr)
gva_raw <- get_eurostat(tolower("NAMA_10R_2GVAGR"))
gdp_raw <- get_eurostat(tolower("NAMA_10R_2GDP"))
colnames(gdp_raw) <- c("freq","unit","geo","time","values")
colnames(gva_raw) <- c("freq","na_item","unit","geo","time","values")
gva_reg <- gva_raw %>%
subset(unit %in% "I15") %>%
subset(na_item %in% "B1GQ") %>% ## Gross domestic product at market prices [B1GQ]
select(geo,time,values)
gdp_reg <- gdp_raw %>%
subset(unit %in% "MIO_EUR") %>%
select(geo,time,values)
gva_cnraw <- get_eurostat(tolower("NAMQ_10_A10"))
gva_cn <- gva_cnraw %>%
subset(unit %in% "CLV_I15") %>%
subset(nace_r2 %in% "TOTAL") %>%
subset(s_adj %in% "SCA") %>% rename("time" = "TIME_PERIOD") %>%
select(geo,time,values)
# --------------------------------------------------------------------------------------------------------
# re-labeling
gva_cn <- gva_cn[nchar(gva_cn$geo)==2,]
gva_reg <- gva_reg[nchar(gva_reg$geo)==4,] # subset to nuts-2 regions only
gdp_reg <- gdp_reg[nchar(gdp_reg$geo)==4,] # subset to nuts-2 regions only
gva_reg$nuts <- gva_reg$geo
gva_reg$geo <- substr(gva_reg$nuts,1,2)
gdp_reg$nuts <- gdp_reg$geo
gdp_reg$geo <- substr(gdp_reg$nuts,1,2)
list.cn <- c("AT","BE","DE","EL","ES","FI","FR","IE","IT","NL","PT","SK")
gva_ls <- list()
gdp_ls <- list()
for(cn in 1:length(list.cn)){
gva_cn_sub <- gva_cn %>%
subset(geo %in% list.cn[cn]) %>%
select(time,values) %>%
arrange(time)
gva_reg_sub <- gva_reg %>%
subset(geo %in% list.cn[cn]) %>%
select(time,nuts,values) %>%
pivot_wider(names_from = nuts, values_from = values) %>%
arrange(time)
gdp_reg_sub <- gdp_reg %>%
subset(geo %in% list.cn[cn]) %>%
select(time,nuts,values) %>%
pivot_wider(names_from = nuts, values_from = values) %>%
arrange(time)
start_q <- as.numeric(unlist(strsplit(as.character(min(gva_cn_sub$time)),"-"))[1:2])
start_y <- as.numeric(substr(min(gva_reg_sub$time),1,4))
macro_sub <- macro_cn %>%
subset(geo %in% list.cn[cn]) %>%
subset(time %in% seq(as.Date("1995-01-01"),as.Date("2023-01-01"),by="month")) %>%
pivot_wider(names_from = variable, values_from = values) %>%
arrange(time)
ir_sub <- ir_cn %>%
subset(geo %in% "EA") %>%
subset(time %in% seq(as.Date("1995-01-01"),as.Date("2023-01-01"),by="month")) %>%
pivot_wider(names_from = variable, values_from = values) %>%
arrange(time) %>% select(!geo)
macro_sub <- left_join(macro_sub,ir_sub, by = "time")
macro_sub <- ts(macro_sub[,3:ncol(macro_sub)],start=c(1995,1),frequency=12)
macro_sub <- aggregate(macro_sub,nfrequency=4,function(x) mean(x,na.rm=TRUE))
gva_ls[[list.cn[cn]]] <- list("nat"=diff(log(ts(gva_cn_sub[,-1],start=start_q,frequency=4))),
# "natplus"=window(nat_plus,start=start_q),
"reg"=diff(log(ts(gva_reg_sub[,-1],start=start_y))),
# "exo"=diff(log(ts(nuts_sub[,-1],start=start_n,frequency=12))),
"regraw"=ts(gdp_reg_sub[,-1],start=start_y))
}
rm(list=ls())
library(eurostat)
library(dplyr)
library(tidyr)
library(reshape2)
library(readr)
gva_raw <- get_eurostat(tolower("NAMA_10R_2GVAGR"))
gdp_raw <- get_eurostat(tolower("NAMA_10R_2GDP"))
colnames(gdp_raw) <- c("freq","unit","geo","time","values")
colnames(gva_raw) <- c("freq","na_item","unit","geo","time","values")
gva_reg <- gva_raw %>%
subset(unit %in% "I15") %>%
subset(na_item %in% "B1GQ") %>% ## Gross domestic product at market prices [B1GQ]
select(geo,time,values)
gdp_reg <- gdp_raw %>%
subset(unit %in% "MIO_EUR") %>%
select(geo,time,values)
gva_cnraw <- get_eurostat(tolower("NAMQ_10_A10"))
gva_cn <- gva_cnraw %>%
subset(unit %in% "CLV_I15") %>%
subset(nace_r2 %in% "TOTAL") %>%
subset(s_adj %in% "SCA") %>% rename("time" = "TIME_PERIOD") %>%
select(geo,time,values)
# --------------------------------------------------------------------------------------------------------
# re-labeling
gva_cn <- gva_cn[nchar(gva_cn$geo)==2,]
gva_reg <- gva_reg[nchar(gva_reg$geo)==4,] # subset to nuts-2 regions only
gdp_reg <- gdp_reg[nchar(gdp_reg$geo)==4,] # subset to nuts-2 regions only
gva_reg$nuts <- gva_reg$geo
gva_reg$geo <- substr(gva_reg$nuts,1,2)
gdp_reg$nuts <- gdp_reg$geo
gdp_reg$geo <- substr(gdp_reg$nuts,1,2)
list.cn <- c("AT","BE","DE","EL","ES","FI","FR","IE","IT","NL","PT","SK")
gva_ls <- list()
gdp_ls <- list()
for(cn in 1:length(list.cn)){
gva_cn_sub <- gva_cn %>%
subset(geo %in% list.cn[cn]) %>%
select(time,values) %>%
arrange(time)
gva_reg_sub <- gva_reg %>%
subset(geo %in% list.cn[cn]) %>%
select(time,nuts,values) %>%
pivot_wider(names_from = nuts, values_from = values) %>%
arrange(time)
gdp_reg_sub <- gdp_reg %>%
subset(geo %in% list.cn[cn]) %>%
select(time,nuts,values) %>%
pivot_wider(names_from = nuts, values_from = values) %>%
arrange(time)
start_q <- as.numeric(unlist(strsplit(as.character(min(gva_cn_sub$time)),"-"))[1:2])
start_y <- as.numeric(substr(min(gva_reg_sub$time),1,4))
gva_ls[[list.cn[cn]]] <- list("nat"=diff(log(ts(gva_cn_sub[,-1],start=start_q,frequency=4))),
"reg"=diff(log(ts(gva_reg_sub[,-1],start=start_y))),
"regraw"=ts(gdp_reg_sub[,-1],start=start_y))
}
gc()
source("~/Library/CloudStorage/Dropbox/Projects Research/!JRC-MFregNC/mf-reg-nc/!IJF-replication/00_data-prep/gva_eurostat.R", echo=TRUE)
source("~/Library/CloudStorage/Dropbox/Projects Research/!JRC-MFregNC/mf-reg-nc/!IJF-replication/00_data-prep/gva_eurostat.R", echo=TRUE)
gc()
source("~/Library/CloudStorage/Dropbox/Projects Research/!JRC-MFregNC/mf-reg-nc/!IJF-replication/00_data-prep/gva_eurostat.R", echo=TRUE)
